<!DOCTYPE html>

-load static

%html(lang="en")
    %head
        %meta(charset="UTF-8")/
        %meta(name="viewport" content="width=device-width, initial-scale=1.0")/
        %title PDF Export: {{title}}

        -if brand.favico
            %link{type:"image/ico", rel:"shortcut icon", href:"{{ STATIC_URL }}{{ brand.favico }}"}
        -else
            %link{type:"image/ico", rel:"shortcut icon", href:"{{ STATIC_URL }}images/favicon.ico"}
            

        -for css in styles
            %link{rel:'stylesheet', type:'text/css', href:'{{css}}'}
        -for script in scripts
            %script{type:'text/javascript', src:'{{script}}'}

        :css
            @media print {
                [class*="Sticky_title"] {
                    min-height: 20px !important;
                }
            }
        
        %script{src: "{% static 'bower/jquery/jquery.js' %}"}
        :javascript
            $(document).ready(() => {
                $('[class*="Simulator_sim_container"]').hide();
                $('[class*="PopTab_tab"]').hide();
            });    
        
    %body
        #rp-flow-editor
            <rp-loading units="10" size="8"></rp-loading>

        :javascript
            const base = '/flow/assets/{{object.org.id}}/' + new Date().getTime() + '/';
            const api = '/api/v2/';

            // line up our flow types with goflow types
            var flowType = '{{object.flow_type}}';
            if (flowType == 'M') {
                flowType = 'message';
            } else if (flowType == 'V') {
                flowType = 'voice';
            } else if (flowType == 'S') {
                flowType = 'message_offline';
            }

            function handleEditorLoaded() {
                $('#rp-flow-editor > div').css('opacity', '1');
                $('[class*="Simulator_sim_container"]').hide();
                $('[class*="PopTab_tab"]').hide();
                setTimeout(() => {$('[class*="components_printButton"]').click()}, 1000)
            }

            const config = {
            
            forceSaveOnLoad: false,
            flow: '{{object.uuid}}',
            flowType: flowType,
            localStorage: true,
            showTemplates: false,
            onLoad: handleEditorLoaded,
            onActivityClicked: () => {},
            mutable: false,
            filters: [],

            help: {
                legacy_extra: 'https://help.nyaruka.com/en/articles/3747485-migrating-away-from-legacy_extra',
                missing_dependency: 'http://help.nyaruka.com/en/articles/3747650-fixing-missing-dependencies',
                invalid_regex: 'http://help.nyaruka.com/en/articles/3747654-invalid-regular-expressions'
            },

            endpoints: {

                groups: api + 'groups.json',
                fields: api + 'fields.json',
                labels: api + 'labels.json',
                channels: api + 'channels.json',
                classifiers: api + 'classifiers.json',
                resthooks: api + 'resthooks.json',
                templates: api + 'templates.json',
                flows: api + 'flows.json?archived=false',
                globals: api + 'globals.json',
                editor: '/flow/editor',

                // TODO: migrate to API?
                revisions: '/flow/revisions/{{object.uuid}}/',
                recents: '/flow/recent_messages/{{object.uuid}}/',
                attachments: '/flow/upload_media_action/{{object.uuid}}/',
                attachments_validation: '{% url "api.v2.attachments_validation" %}',
                languages: base + 'language',
                environment: base + 'environment',
                activity: '/flow/activity/{{object.uuid}}/',
                recipients: '/contact/omnibox?v=2&types=gc',

                completion: '/mr/docs/completion.json',
                functions: '/mr/docs/functions.json',
                simulateStart: '/flow/simulate/{{object.id}}/',
                simulateResume: '/flow/simulate/{{object.id}}/',

                lookups: '/flow/lookups_api/',
                giftcard: '/flow/giftcards_api/',
                link: '/link/api/',
            }
            };

            showFlowEditor(document.getElementById('rp-flow-editor'), config);


