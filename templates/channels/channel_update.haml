-extends "smartmin/update.html"
-load i18n smartmin

-block title
  %h2
    {{ title }}


{% block content %}
  #ccl-web-surveyor
  {% block pjax %}
  <div class="row" id="pjax">
    <div class="{% block form-span %}col-md-12{% endblock %}">

    <form class="smartmin-form form-horizontal" method="post" enctype="multipart/form-data" role="form">

      {% if form.non_field_errors %}
      <div class="alert alert-danger form-errors">
        {{ form.non_field_errors }}
      </div>
      {% endif %}

      {% block post-form-errors %}
      {% endblock post-form-errors %}

      {% block pre-fields %}
      {% endblock %}

      {% block form-help %}{% endblock form-help %}

      {% block fields %}
      <fieldset>
      {% if object.channel_type == "WCH" %}

      <div class='custom-collapsed-menu setup'>
        <a href='javascript:;' class='collapsed-title' id='link-menu-setup'>
          <i class='icon-arrow-down-2'></i>
          WebChat Setup
        </a>
        <div class='custom-collapsed-menu-fields'>
          {% render_field "name" %}
          {% render_field "alert_email" %}
          {% render_field "logo" %}
          {% render_field "logo_style" %}
          {% render_field "title" %}
          {% render_field "store_history" %}
        </div>
      </div>

      <div class='custom-collapsed-menu welcome-message'>
        <a href='javascript:;' class='collapsed-title'>
          <i class='icon-arrow-right-8'></i>
          Welcome Message
        </a>
        <div class="help-text">
          Note: translation is only available for languages that are compatible with web browsers.
        </div>
        <div class='custom-collapsed-menu-fields'>
          {% render_field "welcome_message_default" %}

          {% for lang in languages %}
          {% render_field "welcome_message_"|add:lang.iso_code %}
          {% endfor %}

          {% render_field "inputtext_placeholder_default" %}

          {% for lang in languages %}
          {% render_field "inputtext_placeholder_"|add:lang.iso_code %}
          {% endfor %}

          {% render_field "welcome_msg_quick_replies" %}
        </div>
      </div>

      <div class='custom-collapsed-menu look-and-feel'>
        <a href='javascript:;' class='collapsed-title'>
          <i class='icon-arrow-right-8'></i>
          Look and Feel
        </a>
        <div class='custom-collapsed-menu-fields'>
          {% render_field "theme" %}

          {% include "utils/forms/color.haml" with label="Widget Background Color" name="widget_bg_color" value=form.widget_bg_color.value %}

          {% include "utils/forms/color.haml" with label="Chat Header Background Color" name="chat_header_bg_color" value=form.chat_header_bg_color.value %}

          {% include "utils/forms/color.haml" with label="Chat Header Text Color" name="chat_header_text_color" value=form.chat_header_text_color.value %}

          {% include "utils/forms/color.haml" with label="Automated Chat Background" name="automated_chat_bg" value=form.automated_chat_bg.value %}

          {% include "utils/forms/color.haml" with label="Automated Chat Text" name="automated_chat_txt" value=form.automated_chat_txt.value %}

          {% include "utils/forms/color.haml" with label="User Chat Background" name="user_chat_bg" value=form.user_chat_bg.value %}

          {% include "utils/forms/color.haml" with label="User Chat Text" name="user_chat_txt" value=form.user_chat_txt.value %}

          {% render_field "google_font" %}
        </div>
      </div>

      <div class='custom-collapsed-menu position-and-size'>
        <a href='javascript:;' class='collapsed-title'>
          <i class='icon-arrow-right-8'></i>
          Position and Size
        </a>
        <div class='custom-collapsed-menu-fields'>
          {% render_field "chat_button_height" %}
          {% render_field "side_padding" %}
          {% render_field "bottom_padding" %}
          {% render_field "side_of_screen" %}
          {% render_field "auto_open" %}
        </div>
      </div>

      {% render_field "action_type" %}

      {% else %}

        {% for field in fields %}
        {% render_field field %}
        {% endfor %}

        {% block extra-fields %}
        {% endblock %}

      {% endif %}

      </fieldset>
      {% endblock fields %}

      {% block post-fields %}
      {% endblock post-fields %}

      {% csrf_token %}

      {% block form-buttons %}

      {% if object.channel_type == "WCH" %}

      %a.button-primary{onclick:"updateFormActionAndSubmit();"}
        -trans "Save and Update Widget"
      %input.button-primary{type:"submit", value:"{{ submit_button_name }}", style:"margin-top: -4px;"}
      %a.button-light{onclick:"javascript:history.go(-1)"}
        -trans "Cancel"

      {% else %}

      <div class="form-actions mt-4">
        <input type="submit" class="button-primary" value="{{ submit_button_name }}" />
        <button class="button-light" onclick="javascript:history.go(-1)">{% trans "Cancel" %}</button>
        {% if delete_url %}
          <a class="button-danger" href="{{ delete_url }}">{% trans "Remove" %}</a>
        {% endif %}
      </div>

      {% endif %}
      {% endblock %}
    </form>

    </div>
  </div>
  {% endblock pjax %}
{% endblock content %}


-block extra-style
  :css

    #id_logo {
      margin-bottom: 10px;
    }

    .control-label {
      width: 100% !important;
      text-align: left !important;
      margin-bottom: 5px;
      margin-left: 4px;
      display: block;
      font-weight: 400;
      font-size: 13px;
      letter-spacing: 0.05em;
      line-height: normal;
      color: rgb(119, 119, 119);
    }

    .input-container {
      border-radius: var(--curvature-widget);
      cursor: text;
      background: var(--color-widget-bg);
      border: 1px solid var(--color-widget-border);
      transition: all 0.2s ease-in-out 0s;
      display: flex;
      flex-direction: row;
      align-items: stretch;
      box-shadow: rgba(0, 0, 0, 0.04) 0px 3px 20px 0px, rgba(0, 0, 0, 0.02) 0px 1px 2px 0px;
    }

    .textinput {
      padding: var(--temba-textinput-padding);
      border: none;
      flex: 1 1 0%;
      margin: 0px;
      background: 0px 0px;
      color: var(--color-widget-text);
      font-family: var(--font-family);
      font-size: var(--temba-textinput-font-size);
      line-height: normal;
      cursor: text;
      resize: none;
      font-weight: 300;
      width: 100%;
    }

    .form-group {
      margin-bottom:15px;
    }

    #id_welcome_message {
        min-height: 100px;
    }

    .welcome-message-languages a {
      display: inline-block;
      margin: 2px 0;
      padding: 0 10px;
      border-right: 1px solid #569D9B;
    }

    .ref-welcome-message-languages, .ref-input-placeholder-languages {
      padding-left: 10px;
    }

    .ref-welcome-message-languages a, .ref-input-placeholder-languages a {
      padding: 0 10px 0 0;
      display: inline-block;
    }

    .ref-welcome-message-languages a:last-child, .ref-input-placeholder-languages a:last-child {
      border-right: none;
    }

    .ref-welcome-message-languages a.active, .ref-input-placeholder-languages a.active {
      color: #000000;
    }

    .custom-collapsed-menu {
      margin: 0 0 20px 0;
    }

    .custom-collapsed-menu .collapsed-title {
      font-size: 16px;
      margin: 0 0 10px 0;
      display: block;
      font-weight: 700;
      text-decoration: none;
      color: #666;
    }

    .custom-collapsed-menu .collapsed-title:hover {
      text-decoration: none;
      color: #569D9B;
    }

    .custom-collapsed-menu.active .custom-collapsed-menu-fields {
      display: block;
    }

    .custom-collapsed-menu .custom-collapsed-menu-fields {
      display: none;
    }

    .ccl-tooltip {
      margin: 2px 0 0 10px;
      font-size: 15px;
    }

    .help-text {
      font-size: 14px;
      margin-bottom: 10px;
    }

    {% if object.channel_type == "WCH" %}
    .page-content {
      margin-left: 3rem;
    }
    {% endif %}

-block extra-script
  <script src="{{ STATIC_URL }}js/jscolor.js"></script>
  {% if object.channel_type == "WCH" %}
  <script src="{{ widget_compiled_file }}" type="text/javascript"></script>
  {% endif %}

  :javascript
    function buildWebChat(welcomeMsgDict, inputTextDict, googleFontForm, logoStyleForm, sideOfScreenForm, quickRepliesForm) {
      var googleFontValue = $("#id_google_font")[0].values || [];
      googleFontValue = googleFontValue.length > 0 ? googleFontValue[0].value : null;
      if (googleFontForm != null || googleFontForm != undefined) {
        googleFontValue = googleFontForm;
      }

      var sideOfScreenValue = $("#id_side_of_screen")[0].values || [];
      sideOfScreenValue = sideOfScreenValue.length > 0 ? sideOfScreenValue[0].value : "right";
      if (sideOfScreenForm != null || sideOfScreenForm != undefined) {
        sideOfScreenValue = sideOfScreenForm;
      }

      var logoStyleValue = $("#id_logo_style")[0].values || [];
      logoStyleValue = logoStyleValue.length > 0 ? logoStyleValue[0].value : "circle";
      if (logoStyleForm != null || logoStyleForm != undefined) {
        logoStyleValue = logoStyleForm;
      }

      var title = $("#id_title").val();
      var icon = "{{ object.config.logo }}";
      var welcomeMessage = $("#id_welcome_message_default").val();
      var inputTextPlaceholderValue = $("#id_inputtext_placeholder_default").val();
      var widgetBackgroundColor = "#" + $("#id_widget_bg_color").val();
      var chatHeaderBackgroundColor = "#" + $("#id_chat_header_bg_color").val();
      var chatHeaderTextColor = "#" + $("#id_chat_header_text_color").val();
      var automatedChatBackgroundColor = "#" + $("#id_automated_chat_bg").val();
      var automatedChatTextColor = "#" + $("#id_automated_chat_txt").val();
      var userChatBackgroundColor = "#" + $("#id_user_chat_bg").val();
      var userChatTextColor = "#" + $("#id_user_chat_txt").val();
      var logoStyle = logoStyleValue;
      var chatButtonHeight = parseInt($("#id_chat_button_height").val());
      var sidePadding = parseInt($("#id_side_padding").val());
      var bottomPadding = parseInt($("#id_bottom_padding").val());
      var sideOfScreen = sideOfScreenValue;
      var googleFont = googleFontValue;
      var welcomeMessageQuickReplies = quickRepliesForm;

      var quickRepliesValue = $("#id_welcome_msg_quick_replies")[0].values || [];
      if (quickRepliesValue.length > 0) {
        var valuesQuickReplies = [];
        for (var qr in quickRepliesValue) {
          valuesQuickReplies.push(quickRepliesValue[qr].value);
        }
        welcomeMessageQuickReplies = valuesQuickReplies.join(",");
      }

      welcomeMessageQuickReplies = (welcomeMessageQuickReplies !== "" && welcomeMessageQuickReplies !== undefined) ? welcomeMessageQuickReplies.split(",") : [];

      window.renderSurveyor({
        socketUrl: '{{ websocket_url }}',
        channelUUID: '{{ object.uuid }}',
        title: title,
        autoOpen: true,
        hostApi: 'https://{{ hostname }}',
        icon: icon,
        welcomeMessage: welcomeMessage,
        welcomeMessageI18n: welcomeMsgDict,
        inputTextPlaceholder: inputTextPlaceholderValue,
        inputTextPlaceholderI18n: inputTextDict,
        welcomeMessageQuickReplies: welcomeMessageQuickReplies,
        theme: {
          widgetBackgroundColor: widgetBackgroundColor,
          chatHeaderBackgroundColor: chatHeaderBackgroundColor,
          chatHeaderTextColor: chatHeaderTextColor,
          automatedChatBackgroundColor: automatedChatBackgroundColor,
          automatedChatTextColor: automatedChatTextColor,
          userChatBackgroundColor: userChatBackgroundColor,
          userChatTextColor: userChatTextColor,
          logoStyle: logoStyle,
          chatButtonHeight: chatButtonHeight,
          sidePadding: sidePadding,
          bottomPadding: bottomPadding,
          sideOfScreen: sideOfScreen,
          googleFont: googleFont
        },
        meta: {
          icon: {
            width: {{ wch_logo_size.width }},
            height: {{ wch_logo_size.height }}
          }
        }
      }, 'ccl-web-surveyor');
    }

    (function($) {
      // change the value of the first option to be empty so that select2 placeholder works
      $('#id_country').children(":first").remove();

      function reformatWebChatUpdatePage() {
        var errorsLenght = $(".control-group.error").length;
        if (errorsLenght == 0) {
          $(".custom-collapsed-menu.setup").addClass("active");
        }
      }

      // adding languages to the form
      {% if object.channel_type == "WCH" %}
      $(document).ready(function() {
        var body = $('body');
        body.append(document.getElementById("ccl-web-surveyor"));

        reformatWebChatUpdatePage();

        $(".control-group.error").each(function(idx, el) {
          $(el.parentNode.parentNode).find("a.collapsed-title").find("i").attr("class", "icon-arrow-down-2");
          $(el.parentNode.parentNode).find(".custom-collapsed-menu-fields").slideDown();
        });

        $(".custom-collapsed-menu .collapsed-title").click(function() {
          var el = $(this).parent().find(".custom-collapsed-menu-fields");
          $(".custom-collapsed-menu-fields").slideUp();
          $(".custom-collapsed-menu").find("a.collapsed-title").find("i").attr("class", "icon-arrow-right-8");
          el.parent().find("a.collapsed-title").find("i").attr("class", "icon-arrow-down-2");
          el.slideDown();
        });

        buildGoogleFontLink($("temba-select[name='google_font']").find("temba-option[selected]")[0].attributes.value.nodeValue);

        {% for item in customable_fields %}
        $("{{ item }}").blur(function() {
          buildWebChat();
        });
        {% endfor %}

        $("#id_side_of_screen").change(function() {
          buildWebChat();
        });

        $("temba-select[name='google_font']").on("change", function(evt) {
          buildWebChat();

          var selected = evt.target.values[0];
          buildGoogleFontLink(selected !== undefined ? selected.value : null);
        });

        $("#id_logo_style").change(function() {
          buildWebChat();
        });

        var allLanguages = [{"iso_code": "default", "name": "Default"}];
        var welcomeMsgValues = {};
        var inputTextPlaceholderValues = {};

        {% for lang in languages %}
        allLanguages.push({"iso_code": "{{ lang.iso_code }}", "name": "{{ lang.name }}"});
        welcomeMsgValues["{{ lang.iso_code }}"] = document.getElementById("id_welcome_message_{{ lang.iso_code }}").value;
        inputTextPlaceholderValues["{{ lang.iso_code }}"] = document.getElementById("id_inputtext_placeholder_{{ lang.iso_code }}").value;
        {% endfor %}

        var divLanguages;
        var welcomeMessageField;
        var allDivLanguages = [];

        var divLanguagesInputPlaceholder;
        var inputPlaceholderField;
        var allDivLanguagesInputPlaceholder = [];

        for (var lang in allLanguages) {
          divLanguages = document.createElement("div");
          divLanguages.classList.add("welcome-message-languages-" + allLanguages[lang]["iso_code"]);
          divLanguages.classList.add("ref-welcome-message-languages");
          welcomeMessageField = document.getElementsByClassName("field_welcome_message_" + allLanguages[lang]["iso_code"]);
          welcomeMessageField[0].appendChild(divLanguages);
          allDivLanguages.push(divLanguages);

          divLanguagesInputPlaceholder = document.createElement("div");
          divLanguagesInputPlaceholder.classList.add("input-placeholder-languages-" + allLanguages[lang]["iso_code"]);
          divLanguagesInputPlaceholder.classList.add("ref-input-placeholder-languages");
          inputPlaceholderField = document.getElementsByClassName("field_inputtext_placeholder_" + allLanguages[lang]["iso_code"]);
          inputPlaceholderField[0].appendChild(divLanguagesInputPlaceholder);
          allDivLanguagesInputPlaceholder.push(divLanguagesInputPlaceholder);
        }

        for (var divLang in allDivLanguages) {
          for (lang in allLanguages) {
            var divLangItem = document.createElement("a");
            divLangItem.href = "javascript:;";
            divLangItem.setAttribute("data-iso-code", allLanguages[lang]["iso_code"]);
            divLangItem.onclick = function() { changeLangField($(this)) };
            divLangItem.text = allLanguages[lang]["name"];
            if (lang == 0) {
              divLangItem.classList.add("active");
            }
            var divLangItemClone = divLangItem.cloneNode(true);
            allDivLanguages[divLang].appendChild(divLangItem);

            divLangItemClone.removeAttribute("data-iso-code");
            divLangItemClone.setAttribute("data-placeholder-iso-code", allLanguages[lang]["iso_code"]);
            divLangItemClone.onclick = function() { changeLangFieldInputPlaceholder($(this)); }

            allDivLanguagesInputPlaceholder[divLang].appendChild(divLangItemClone);
          }
        }

        $.each($("div[class^='control-group field_welcome_message_']"), function (index) {
          if (index !== 0) {
            $(this).addClass("hide");
          }
        });

        $.each($("div[class^='control-group field_inputtext_placeholder_']"), function (index) {
          if (index !== 0) {
            $(this).addClass("hide");
          }
        });

        $("input").removeAttr("required");
        $("textarea").removeAttr("required");

        buildWebChat(welcomeMsgValues, inputTextPlaceholderValues, "{{ form.google_font.value }}", "{{ form.logo_style.value }}", "{{ form.side_of_screen.value }}", "{{ form.welcome_msg_quick_replies.value|safeseq|join:',' }}");
      });
      {% endif %}
    })(jQuery);

    function updateFormActionAndSubmit() {
      $("#id_action_type").val("update_and_reload");
      $(".smartmin-form").submit();
    }

    function changeLangField(el) {
      $(".ref-welcome-message-languages a").removeClass("active");
      $("a[data-iso-code='" + el.data('iso-code') + "']").addClass("active");
      $("div[class^='control-group field_welcome_message_']").addClass('hide');
      $(".field_welcome_message_" + el.data('iso-code')).removeClass('hide');
    }

    function changeLangFieldInputPlaceholder(el) {
      $(".ref-input-placeholder-languages a").removeClass("active");
      $("a[data-placeholder-iso-code='" + el.data('placeholder-iso-code') + "']").addClass("active");
      $("div[class^='control-group field_inputtext_placeholder_']").addClass('hide');
      $(".field_inputtext_placeholder_" + el.data('placeholder-iso-code')).removeClass('hide');
    }

    function buildGoogleFontLink(fontName) {
      if (!fontName) {
        $("#google_font_preview").remove();
        return
      }
      var fullURL = `https://fonts.google.com/specimen/${fontName}`;
      $("#google_font_preview").remove();
      $(".field_google_font").append(`<span id="google_font_preview">Google Font preview at <a href="${fullURL}" target="_new">${fullURL}</a></span>`);
    }
