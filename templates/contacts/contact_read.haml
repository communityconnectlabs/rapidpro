-extends "smartmin/read.html" 

-load smartmin sms contacts compress temba channels
-load i18n humanize

-block buttons

-block page-title
  {{contact|name_or_urn:user_org|default:"Contact Details"}}

-block title
  .flex.flex-wrap.flex-row.items-center
    .mr-3
      {{contact|name_or_urn:user_org|default:"Contact Details"}}
    -for urn in contact_urns
      -if not user_org.is_anon
        -if urn.sendable
          %temba-modax.text-base{ header:'Send Message', endpoint:"{% url 'msgs.broadcast_send' %}?u={{urn.id}}"}
            .mr-3.hover-linked{class:"glyph {{urn|urn_icon}}", style:"margin-top:0px"}

-block subtitle

  .flex.flex-wrap.mt-1

    -if contact.status == 'B'
      .lbl-group.mt-2.mr-2.bg-secondary.linked.inverted.cursor-pointer{onclick:"goto(event)", href:"{% url 'contacts.contact_blocked' %}"}
        -trans "Blocked"

    -elif contact.status == 'S'
      .lbl-group.inverted.linked.mt-2.mr-2.bg-secondary.font-normal{onclick:"goto(event)", href:"{% url 'contacts.contact_stopped' %}"}
        -trans "Stopped"

    -elif contact.status == 'V'
      .lbl-group.mt-2.mr-2.linked.bg-secondary.inverted.font-normal{onclick:"goto(event)", href:"{% url 'contacts.contact_archived' %}"}
        -trans "Archived"

    -for group in contact_groups
      -if group.is_dynamic
        .lbl-group-dynamic.mt-2.mr-2.linked{onclick:"goto(event)", href:"{% url 'contacts.contact_filter' group.uuid %}"}
          = group.name

    -for group in contact_groups
      -if not group.is_dynamic
        .lbl-group.mt-2.mr-2.linked{onclick:"goto(event)", href:"{% url 'contacts.contact_filter' group.uuid %}"}
          = group.name

-block read-buttons

-block content

  // Needed for table wrapping on IE 9
  <!--[if IE]>
  <style>
    table.activity { table-layout: fixed; }
  </style>
  <![endif]-->


  -if all_contact_fields.0.show_in_table
    .bg-gray-100.rounded-lg.p-3.mb-6
      .flex.flex-wrap
        -for field in all_contact_fields
          -if field.show_in_table
            .flex.flex-col.p-2
              .contact-field{data-id:'{{field.id}}'}
                .contact-field-value.editable.cursor-pointer.hover-linked.font-bold.text-gray-600
                  {{field.value|truncatechars:20}}
              .whitespace-no-wrap.pr-12.contact-field{data-id:'{{field.id}}'}
                .contact-field-value.tracking-wider.font-normal.text-xs
                  {{field.label|title}}



  %table.list.tight.toggle.stateful#contact-details
    %thead
      %th(colspan="2")
        -trans "Details"
    %tbody
      %tr
        %td
          .whitespace-no-wrap.pr-24.contact-field
            .contact-field-value.uppercase.tracking-wider.font-normal.text-xs
              -trans "Created On"
        %td.w-full
          .contact-field-value
            {% format_datetime contact.created_on %}
      %tr
        %td
          .whitespace-no-wrap.pr-24.contact-field
            .contact-field-value.uppercase.tracking-wider.font-normal.text-xs
              -trans "Last Seen On"
        %td.w-full
          .contact-field-value
            -if contact.last_seen_on
              {% format_datetime contact.last_seen_on %}
            -else
              {{ "--" }}

      -if contact_language
        %tr
          %td
            .whitespace-no-wrap.pr-12.contact-field
              .contact-field-value.uppercase.tracking-wider.font-normal.text-xs
                -trans "Language"
          %td.w-full
            .contact-field-value.hover-linked
              -trans 'Edit Contact' as title
              %temba-modax(header="{{title|escapejs}}" endpoint="{% url 'contacts.contact_update' contact.pk %}")
                {{contact_language}}

      -if user_org.is_anon
        %tr
          %td
            .whitespace-no-wrap.pr-12.contact-field
              .contact-field-value.uppercase.tracking-wider.font-normal.text-xs
                -trans "Contact Id"
          %td.w-full
            .contact-field
              .contact-field-value
                {{contact.anon_identifier}}


      -for field in all_contact_fields
        %tr
          %td
            .whitespace-no-wrap.pr-12.contact-field{data-id:'{{field.id}}'}
              .contact-field-value.uppercase.tracking-wider.font-normal.text-xs
                {{field.label|title}}
          %td.w-full
            .contact-field{data-id:'{{field.id}}'}
              .contact-field-value.editable.cursor-pointer.hover-linked
                {{field.value}}

      -for urn in contact_urns
        -if not user_org.is_anon
          %tr
            %td
              .whitespace-no-wrap.pr-12.contact-field
                .contact-field-value.uppercase.tracking-wider.font-normal.text-xs
                  .mr-1.leading-none.text-gray-500{class:"glyph {{urn|urn_icon}}", style:"margin-top: -1px; font-size:14px"}
                  -if urn.scheme == 'mailto'
                    -trans "Email"
                  -else
                    {{urn.scheme}}
            %td.w-full
              .contact-field-value
                -if urn.scheme == 'mailto'
                  .linked{onclick:"goto(event)", href:"{{urn}}"}
                    {{urn|format_urn:user_org}}
                -elif urn.scheme == 'twitter'
                  .linked{onclick:"goto(event)", href:'http://twitter.com/{{urn.path}}'}
                    {{urn|format_urn:user_org}}
                -elif urn.scheme == 'twitterid'
                  .linked{onclick:"goto(event)", href:'http://twitter.com/{{urn.display}}'}
                    {{urn|format_urn:user_org}}
                -else
                  {{urn|format_urn:user_org}}

  -if open_tickets
    %table.list.tickets.mt-6
      %thead
        %th(colspan="5")
          -trans "Open Tickets"

      -for ticket in open_tickets
        %tr.item
          %td.icon
            %span.glyph.icon-ticket
          %td.details
            %a(href="{% url 'tickets.ticket_filter' ticket.ticketer.uuid %}")
              {{ ticket.ticketer.name }}
          %td.details
            {{ ticket.subject }}
          %td.details
            {{ ticket.body }}
          %td.created_on
            {% short_datetime ticket.opened_on %}

  -if upcoming_events
    -if upcoming_events|length > 3
      :css
        tbody:nth-child(1) {
          display: none;
        }

    %table.list.upcoming.mt-6.light
      %thead
        %th(colspan="3")
          -trans "Upcoming"
      -for evt in upcoming_events
        -if forloop.counter0 == upcoming_events|length|add:-3
          %tbody.next_three

        %tr.item{class:"{% if evt.event_type == 'M' %}msg{%else%}non-msg{%endif%}"}
          %td.icon
            -if evt.event_type == 'M'
              %span.glyph.icon-bubble-right
            -elif evt.event_type == 'F'
              %span.glyph.icon-flow
            -else
              %span.glyph.icon-clock

          %td.details.w-full

            .activity-scheduled
              -if evt.event_type == 'M'
                .activity-body
                  {{evt.message}}

              -elif evt.event_type == 'F'
                -trans "Start"
                %a.href{ href: "{% url 'flows.flow_editor' evt.flow_uuid %}" }= evt.flow_name
          %td.whitespace-no-wrap.text-right
            .pr-6
              {{ evt.scheduled|naturaltime }}

              .repeats
                -if evt.repeat_period == 'D'
                  -trans 'repeats daily'
                -elif evt.repeat_period == 'W'
                  -trans 'repeats weekly'
              -elif evt.repeat_period == 'M'
                -trans 'repeats monthly'

    -if upcoming_events|length > 3
      %a.pull-right.show-all.upcoming
        more
      %a.pull-right.hide-all.upcoming
        less


  %table.list.activity.history.mt-6.light
    %thead
      %th(colspan="2")
        -trans "History"
      %th(colspan="2")
        .flex.justify-end
          .flow-event-display-selector
            %a.is-active(href="#")
              -trans "Full"
            |
            %a.summary-events-only(href="#")
              -trans "Summary"
    %tr.poll{ ic-src:"/contact/history/{{contact.uuid}}/?after={{recent_start}}",
              ic-trigger-on:"scrolled-into-view",
              ic-poll:"5s",
              ic-target:"table .recent"}

    %tbody.recent

    // trigger the first batch of previous messages
    %tr{ ic-append-from:"/contact/history/{{contact.uuid}}/?before={{recent_start}}", 
         ic-trigger-on:"scrolled-into-view", 
         ic-target:"table .previous", 
         ic-indicator:"#indicator" }

    %tbody.previous

  #indicator{style:"display:none"}
    .loader

-block extra-less
  -compress css

    :css
      .urn-link {
        display: inline-block;
      }
      #gear-container {
        z-index: 1000;
        position: relative;
      }

      .page-content {
        align-self: auto;
        max-width: 1024px;
      }

    {% lessblock %}
      :plain
        table.history, table.upcoming {
          .glyph {
            font-size: 14px;
            line-height: 16px;
            padding-left: 5px;

            &.icon-flow {
              font-size: 18px;
              padding-left: 2px;
            }
          }
        }

        .show-all {
          margin-top:-15px;
          margin-right:18px;
          color: #d1d1d1;

          &.expanded {
            .icon-arrow-down {
              .rotate(2);
            }
          }
          .icon-arrow-down {
            margin-top:2px;
            margin-right: 3px;
          }

          &:hover {
            color: #c1c1c1;
            cursor: pointer;
          }
        }

        .hide-all {
          margin-top:-15px;
          margin-right:18px;
          color: #d1d1d1;

          &.expanded {
            .icon-arrow-down {
              .rotate(2);
            }
          }
          .icon-arrow-down {
            margin-top:2px;
            margin-right: 3px;
          }

          &:hover {
            color: #c1c1c1;
            cursor: pointer;
          }
        }

        .flow-event-display-selector {
          a {
              display: inline-block;
              &.is-active {
                cursor: none;
                color: #999999;
                cursor: text;
                text-decoration: none;
              }
            }
          }

        table.list {

          tr.archive-note {
            border-bottom: none;
            text-align: center;
            color: #666;
            font-size: 90%;

            td {
              padding: 10px;
            }
          }

          tr.since {
            border-bottom: none;
            td {
              text-align:center;
              border-top: 1px solid @color-bg-grey + #555;
              padding-top:15px;

              .date {
                border:0px solid red;
              }

              .btn {
                margin-top:15px;
              }
            }
          }

          tr.in {
            background-color: rgba(86, 157, 155, 0.2);
            font-style: italic;
          }


          tr.end-call {
            background: #ddd;
            color: #000;
            td {
              text-align:center;
              padding: 5px;
            }
          }

          &.upcoming {
            color: #bbb;

            tr.non-msg {
              background: inherit;
            }

            .icon {
              .glyph.icon-bubble-right, .glyph.icon-flow {
                color: #bbb;
              }
              text-align:center;
            }

            a {
              color: #bbb;
            }
          }

          tr {
            &.msg {
              td.icon {
                .icon-bubble-right, .icon-bubble-check, .icon-bullhorn, .icon-call-outgoing {
                  color: @color-status-green;
                }

                .icon-bubble-user, .icon-call-incoming {
                  color: @color-primary;
                }

                .icon-bubble-notification {
                  color: @color-status-failed;
                }
              }
            }

            &.detail-event {
              display: table-row;
            }

            &.non-msg {
              background: #fafafa;

              &.skipped {
                background: #fafafa;
              }

              &.new-session {
                background: #f0f0f0;
              }

              .icon {
                color: rgba(0, 0, 0, 0.20);
              }
            }
          }

          &.summary-events-only {
            tbody {
              tr.detail-event {
                display: none;
              }
            }
          }

          td {
            vertical-align:middle;

            &.icon {
              text-align: center;

              .glyph {
                color: rgba(0,0,0,.20);
              }
            }

            b {
              color: #666
            }
          }

          .created_on {
            font-size:13px;
            line-height:13px;
            border: 0px solid;
            text-align:right;
            min-width: 150px;
            white-space: nowrap;

            .time {
              margin-right: 0px;
            }

            .repeats {
              font-size:90%;
            }
          }

          .details {
            border: 0px solid;
            padding: 14px;

            .summary {
              font-size:11px;
              font-weight:500;
              line-height:10px;
              color: @flat-grey;
            }
          }
        }

        .contact-urn {
          display: inline-block;
          margin-right: 10px;

          .glyph {
            margin-right: 3px;
          }
        }

        .contact-fields {
          background: #f9f9f9;

          font-size: 12px;
          color: @color-font-grey;
          border: 1px solid #f1f1f1;
          margin-bottom: 20px;

          .show-more {
            padding: 10px;
            display:block;
          }

          .contact-field {
            display: inline-block;
            width: 260px;
            padding: 2px 10px;


            .contact-field-label {
              font-weight: normal;
              color: @color-font-black;
              font-size:12px;
              margin-right:2px;
              padding-top:5px;
              font-size:95%;
              display:block;
            }

            .contact-field-label-featured {
              font-style: italic;
            }

            .contact-field-value {
              font-weight: bold;
              color: @color-font-grey;
              padding-top:-5px;
              display:inline-block;
            }

            .editable:hover {
              cursor: pointer;
              text-decoration: underline;
            }
          }
        }

        .page-content{
          position:relative;
        }

        #msg-box{
          background-color: #fff;
          width: inherit;
          position: -webkit-sticky; /* Safari */
          position: sticky;
          z-index: 999;
          top: 0;
          padding-bottom: 10px;
          padding-top: 0.1px;
        }

        #send {
          margin: 0 0 5px 0;
          width: inherit;
          position: relative;

          input[type='text'] {
            resize: none;
            display: block;
            width: 100%;
            height: 50px;
            padding: 0 100px 0 10px;
            margin-right: 15px;
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
          }

          button {
            position: absolute;
            top: 0;
            right: 0;
            height: 50px;
          }
        }
        td.created_on .time {
            margin-right: 40px !important;
        }
    {% endlessblock %}

-block extra-script
  {{ block.super }}

  :javascript

    var startTime = null;

    $(document).ready(function() {
      $(".flow-event-display-selector a").each(function() {
        var onlySummary = getCookie('rp-summaryEventsDisplay') === 'summary';
        if(onlySummary && $(this).hasClass('summary-events-only')) {
          $(this).parent('.flow-event-display-selector').children('a').removeClass('is-active');
          $(this).addClass('is-active');
          $('table.activity.history').addClass('summary-events-only');
        }
      })

      $(".flow-event-display-selector a").on('click', function() {
        $(this).parent('.flow-event-display-selector').children('a').removeClass('is-active');
        $(this).addClass('is-active');
        if($(this).hasClass('summary-events-only')) {
          $('table.activity.history').addClass('summary-events-only');
          document.cookie = "rp-summaryEventsDisplay=summary;path=/;expires=-1";
        } else {
          $('table.activity.history').removeClass('summary-events-only');
          document.cookie = "rp-summaryEventsDisplay=all;path=/;expires=-1";
        }
        return false;
      });

      $('.show-all.upcoming').live('click', function() {
        $(this).hide();
        $('.hide-all.upcoming').show();
        $('table.activity.upcoming tbody:nth-child(1)').show();
      });

      $('.hide-all.upcoming').live('click', function() {
        $(this).hide();
        $('.show-all.upcoming').show();
        $('table.activity.pending tbody:nth-child(1)').hide();
      }).hide();

      $('.show-all.fields').live('click', function() {
        if ($(this).hasClass('expanded')) {
          $(this).removeClass('expanded');
          $('.contact-fields').removeClass('expanded');
          $('.normal').hide();
        } else {
          $(this).addClass('expanded');
          $('.contact-fields').addClass('expanded');
          $('.normal').show();
        }
      });

      $('.time').live('mouseover', function() {
        $(this).children('.long').show();
        $(this).children('.short').hide();
      }).live('mouseleave', function() {
        $(this).children('.short').show();
        $(this).children('.long').hide();
      });
    });

    function refreshRecents(){
      Intercooler.triggerRequest($('tr.poll'));
    }

    // plays an audio attachment on a message
    function playAudioAttachment(audioId) {
      var audio = $('audio#audio-' + audioId);
      var parent = audio.parent();
      var player = audio[0];

      if (!parent.hasClass('playing')) {
        audio.bind('ended', function(){
          parent.removeClass('playing');

        });

        parent.addClass('playing');
        player.currentTime = 0;
        player.play();

      } else {
        parent.removeClass('playing');
        player.pause();
      }
    }

  %script

    {% if org_perms.contacts.contact_update %}
    $('.contact-field-value.editable').live('click', function(evt) {
      var endpoint = '{% url "contacts.contact_update_fields" object.pk %}';
      var field_id = $(this).parent().data('id');
      var modax = document.querySelector("#update-custom-fields");
      modax.endpoint = endpoint + '?field=' + field_id;
      modax.open = true;

      // reset our modal
      window.setTimeout(function(){ modax.endpoint = endpoint;}, 1000);
    });

    {% endif %}



    {% if org_perms.msgs.broadcast_send %}
    // Declare dom vars
    var $msg_input_obj = $('#id_text');
    var $msg_submit_btn = $('#id_send');

    $('#send').submit(function(e){
      e.preventDefault();
      $msg_submit_btn.text('{% trans "Sending..." %}').addClass("disabled");
      $('.failed').remove();
      $('.succeeded').remove();

      if( (!$msg_input_obj.val()) || ($msg_input_obj.val().trim().length == 0)) {
        $msg_input_obj.css({'border':'1px solid #da4f49', 'color':'#da4f49'});
        $('.failed').remove();
        $('{% trans "<p>This field is required, please fill in the message to send out</p>" %}').insertAfter("#id_send").addClass('failed');
        $msg_submit_btn.text('{% trans "Send" %}').removeClass("disabled");
        return false;
      } else if($msg_input_obj.val().length > 160) {
        $('.failed').remove();
        $msg_input_obj.css({'border':'1px solid #da4f49', 'color':'#da4f49'});
        $('{%trans "<p>Ensure this value has at most 160 characters (it has " %}' + $msg_input_obj.val().length + ') </p> ').insertAfter("#id_send").addClass('failed');
        $msg_submit_btn.text('{% trans "Send" %}').removeClass("disabled");
        return false;
      } else {
        var form = $('#send');
        var post = "{% url 'msgs.broadcast_send' %}?u={{ contact.get_urn.id }}";

        if (window.simulation) {
          post = post + "&simulation=true"
        }

        var data = {
          step_node: null,
          schedule: null,
          text: form.find("#id_text").val(),
          csrfmiddlewaretoken: form.find("[name='csrfmiddlewaretoken']").val(),
          omnibox: JSON.stringify({
            "id": "{{ contact.uuid }}",
            "name": "{{ contact.name }}",
            "type": "contact",
            "urn": "{{ contact.get_urn.path }}"
          })
        };

        $.post(post, data, function(data, textStatus, b, c) {
          fetchPJAXContent(".", "#pjax", { forceReload:true });

          $msg_input_obj.val('');

          // make sure we arent showing any previous errors
          $('.failed').remove();
          $msg_input_obj.css({'border':'auto', 'color':'auto'});

          $msg_submit_btn.text('{% trans "Send" %}').removeClass("disabled");
          $msg_submit_btn.after("<div class=succeeded>{% trans "Sent." %}</div>");

          return true;
          window.location.href = data.redirect;

        }).fail(function(data, textStatus) {
          // uh oh, we couldnt post, check for errors to show the user

          if(data.status != 200){
            // console.log(data);
            $msg_submit_btn.after("<div class=failed>" + data.responseText + "</div>");
            return false;
          }

          response = $.parseJSON(data.responseText);

          // make sure we arent showing any previous errors
          $('.failed').remove();

          // show the non-field errors first
          for (msg in response.errors['__all__']) {
            $msg_submit_btn.after("<div class=failed>" + response.errors['__all__'][msg] + "</div>");
          }

          // look through our fielded errors and show them in the form
          for (var error in response.errors) {
            var msgs = response.errors[error];
            for (var msg in msgs) {

              var id = "#id_" + error;
              if (error == "text") {
                id = "#counter";
              }

              $(id).after("<div class=failed id=" + error + "_error>" + msgs[msg] + "</div>");
            }
          }

          // re-enable our send button, so they can try again
          $msg_submit_btn.text('{% trans "Send" %}').removeClass("disabled");
          return false;

        });

        $msg_submit_btn.text('{% trans "Send" %}').removeClass("disabled");
        return true;
      }
    });
    {% endif %}

    {% if org_perms.contacts.contact_update %}
    function removeContactFromGroup(groupId, contactId){
      var elementId = '#group_' + groupId + '_' + contactId;
      $.post('{% url 'contacts.contact_read' contact.uuid %}' + '?action=remove_from_group', {contact: contactId, group: groupId}, function() {
        $(elementId).remove();
      });
    }
    {% endif %}

    {% if org_perms.contacts.contact_delete %}
    $(".contact-delete-button").live('click', function() {
      $(".gear-menu").removeClass("open");
      modal = new ConfirmationModal($('.deletion > .title').html(), $('.deletion > .body').html());
      modal.addClass('alert');
      modal.setListeners({onPrimary: function(){
        $('#delete-form').click();
      }}, false);
      modal.setPrimaryButton('{{ _("Delete")|escapejs }}');
      modal.show();
    });
    {% endif %}
