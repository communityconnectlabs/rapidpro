-extends "smartmin/form.html"

-load smartmin
-load i18n humanize

-block title
  -blocktrans
    Import a {{ collection_type_title }} table to
    %span{style:"font-style:italic"}
      {{ collection_title }}

-block content
  .mb-2
    -trans "If you have a CSV or XLS file with Gift Cards or a Lookup, select it below to import it into your account."

  -block import-status
    .flex.w-full.mb-4.items-end.flex-wrap{style:"min-height:41px"}
      %form#import-form.smartmin-form.horizontal-form{method:"post", action:"{% url 'orgs.org_parse_data_import' %}?db={{ collection }}&type={{ collection_type }}", enctype:"multipart/form-data"}
        -csrf_token
        -if form.non_field_errors
          %div.alert.alert-error.form-errors
            {{ form.non_field_errors }}

        -block fields
          #db-type.hide
            %input{type:"text", name:"collection_type", value:"{{ collection_type }}"}
          #db.hide
            %input{type:"text", name:"collection", value:"{{ collection }}"}
          #file-upload
            %input{type:"file", name:"import_file", id:"import_file", onchange:'updateParseImportFile()'}
          #real_button.flex
            %input{type:"text", id:"file-field"}
            %a.ml-4.button-primary
              -trans "Choose File"
          %div#import_file_errors
            {{ form.import_file.errors }}

        .alert-warning.my-6
          .font-normal.text-2xl
            -trans "Warning!"

          -trans "If you select a database that already exist, the data will be replaced on the current database."
          %br
          %b
            -trans "Do not proceed unless you are willing to replace your existing database."
          %p
          -if collection_type == 'giftcard'
            %p#template-giftcard
              -trans "Template file"
              %a{href:'{{STATIC_URL}}examples/sample_giftcards.csv'}
                -trans "Gift card template"
              %br
              %br
              -trans "Note: Remember that, if you’re using XLS file you need to set all data as text (no numeric and no datetime field)."
          -else
            %p#template-lookup
              -trans "Template file"
              %a{href:'{{STATIC_URL}}examples/sample_lookup.csv'}
                -trans "Lookup template"
              %br
              %br
              -trans "The column names in the CSV or XLS file should only contain spaces, underscores, and alphanumeric characters. They must begin with a letter and be unique."
              %br
              %br
              -trans "In order for data to be mapped correctly, please add the prefix 'numeric_' to columns that are formatted as numbers, and 'date_' to columns formatted as dates. Accepted date format: "
              %b
                -if dayfirst
                  -trans "dd/mm/yyyy"
                -else
                  -trans "mm/dd/yyyy"
              %br
              %br
              -trans "Note: Remember that, if you’re using XLS file you need to set all data as text (no numeric and no datetime field)."
              -trans "If you are using a comma in the CSV file for representing thousands, make sure that these data wrapped into double-quotes."

        .flex
          %input.button-primary{type:"submit", value:'{% trans "Import" %}'}
          %a.ml-4.button-light{href:"{% if collection_type == 'giftcard' %}{% url 'orgs.org_giftcards' %}{% else %}{% url 'orgs.org_lookups' %}{% endif %}"}
            -trans "Cancel"


{% block extra-style %}
:css

  input {
    padding: 9px;
    cursor: pointer;
    box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 0px 1px, rgba(0, 0, 0, 0.04) 0px 3px 20px 0px, rgba(0, 0, 0, 0.02) 0px 1px 2px 0px;
  }

  #file-upload {
    position:relative;
  }

  #real-button {
    position: absolute;
    top: 0px;
    left: 0px;
    z-index: 1;
    height:35px;
    width:450px;
  }

  #file-field {
    width:300px;
    height: 36px;
    font-size:16px;
    margin-bottom: 0px;
    border-radius: 5px;
  }

  #import_file {
    position:absolute;
    width:450px;
    height:35px;
    top: 0px;
    left: 0px;
    text-align: right;
    -moz-opacity:0 ;
    filter:alpha(opacity: 0);
    opacity: 0;
    z-index: 2;
  }
{% endblock %}

-block extra-script
  {{block.super}}
  :javascript
    function updateParseImportFile() {
      var file = $("#import_file").val();
      while (file.indexOf("\\") >= 0){
        file = file.substring(file.indexOf("\\")+1, file.length);
      }
      $("#file-field").val(file);
    }

    var isFormSubmited = false;
    $('#import-form').submit(function(e) {
      if (isFormSubmited) e.preventDefault();
      isFormSubmited = true;
    })

    $(document).ready(function() {
      $('#update').on('change', function() {
        if ($(this).attr('checked')) {
          $('.warning').slideDown();
        } else {
          $('.warning').slideUp();
        }
      });

      $('#import_file').bind('change', function() {
        if (this.files.length > 0 && this.files[0].size > 157286400) {
          alert('Your file exceeds the 150MB file limit. Please submit a support request if you need to upload a file 150MB or larger.');
          $('#import_file').val('');
          $('#file-field').val('');
        }
      });

    });
