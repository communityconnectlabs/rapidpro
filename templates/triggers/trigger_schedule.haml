-extends 'smartmin/form.html'
-load i18n smartmin

-block extra-script
  {{ block.super }}
  <script src="{% url 'django.views.i18n.javascript_catalog' %}"></script>

  :javascript
    function onScheduleSuccess(form, htmlString, status, jqXHR) {
      const requiredFields = ['#trigger_flow', '#trigger_omnibox'];
      handleSubmissionResponse(requiredFields, form, { htmlString, status, jqXHR });
    }

    document.addEventListener("DOMContentLoaded", function(){
      var repeatPeriod = document.querySelector("#id_schedule_repeat_period");
      if (repeatPeriod) {
        repeatPeriod.addEventListener("change", function(event){

          var currentRepeat = event.currentTarget.values[0].value;
          if (currentRepeat == 'W') {
            document.querySelector(".weekly-repeat-options").classList.remove("hidden");
          } else {
            document.querySelector(".weekly-repeat-options").classList.add("hidden");
          }
        });
      }

      const formContainerId = '#id-trigger-schedule';
      const formContainer = document.querySelector(formContainerId);
      lockScheduleDate(formContainer);
      const options = {
        formContainerId,
        confirmationBoxId: '#confirm-schedule-trigger',
        flowFieldId: '#id_schedule_flow',
        postUrl: '/trigger/schedule/',
        successFunc: onScheduleSuccess
      };
      initForm(options);

      if ("{{ user_org.do_not_contact_property }}" === "True") {
        const section =  $('#id-trigger-schedule');
        const form = section.find('form');
        const confirmationBox = document.querySelector("#confirm-schedule-trigger");

        let doNotContactDialog = document.querySelector("#do-not-contact-dialog");
        doNotContactDialog.addEventListener("temba-button-clicked", function(event) {
          if (!event.detail.button.secondary) {
            doNotContactDialog.open = false;
            confirmationBox.classList.remove("hide");
            confirmationBox.open = true;
          }
        });

        form.off("submit").on("submit", function(e) {
          e.preventDefault();
          const formDataByName = buildFormData(form);

          const flowName = getFLowName('#id_schedule_flow');
          const modalMessage = $('#confirm-schedule-trigger').find('div.p-6');
          modalMessage.text(getMessageTemplate().replace('{flowName}', flowName));
          if (formDataByName.start_datetime && formDataByName.start_datetime.length) {
            let time = parseInt(formDataByName.start_datetime.split(" ")[1].split(":")[0]);
            if (time < 8 || time > 21) {
              doNotContactDialog.open = true;
              return;
            }
          }
          confirmationBox.classList.remove('hide');
          confirmationBox.open = true;
        });

        confirmationBox.addEventListener('temba-button-clicked', function(event) {
          const container = formContainerId + ' > .formax-container';
          const groupIds = (buildFormData(form)['omnibox'] || []).map(row => JSON.parse(row).id);
          const appendToForm = '&group_order=' + encodeURIComponent(JSON.stringify(groupIds));
          const options = { form, container, onScheduleSuccess, appendToForm, postUrl: '/trigger/schedule/' };
          if (!event.detail.button.secondary) submitFormData(options);
          confirmationBox.classList.add('hide');
          confirmationBox.open = false;
        });
      }
    });
-block fields
  #trigger_flow
    - render_field 'flow'
  #trigger_omnibox
    - render_field 'omnibox'
  #schedule-options
    -render_field 'start_datetime'
  #recurrence
    .repeat-period
      -render_field 'repeat_period'
    .weekly-repeat-options{class:'{% if form.repeat_period.value == "W" %}{% else%}hidden{%endif%}'}
      -render_field 'repeat_days_of_week'
  %h5.embedded-data-schedule.hidden
    -trans "Flow Parameters"
  #embedded-data-schedule.hidden
    #embed-container-schedule

  %temba-dialog#confirm-schedule-trigger.hide(header='{{ _("Trigger Confirmation")|escapejs }}' primaryButtonName='{{ _("Confirm")|escapejs }}' destructive='true')
    .p-6

  %temba-dialog#do-not-contact-dialog(header='{{ _("Out of Business Hours Warning")|escapejs }}' primaryButtonName='{{ _("Confirm")|escapejs }}' destructive='true')
    .p-6
      {{ _("You are trying to send a message out of compliance hours (8AM - 9PM). Are you sure you want to continue?") }}


-block summary
  -trans "Start a flow in the future or on a schedule."
